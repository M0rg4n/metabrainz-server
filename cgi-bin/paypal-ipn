#!/home/httpd/metabrainz/metabrainz/bin/perl -w

use strict;
no warnings qw( portable );
use Apache::Request;
use Data::Dumper;
use LWP::UserAgent;
use MetaBrainz::Server::Defs;
use MetaBrainz::Server::Donation;
use MetaBrainz::Server::MetaBrainz;
use MetaBrainz::Server::Receipt;
use Fcntl qw( :flock );
use Data::Dumper;

sub LogTransaction
{
    my ($params, $message, $log_file) = @_;

    open FH, ">> $log_file" or die;

    flock(FH, LOCK_EX) or return;
    seek(FH, 2, 0) or return;
    print FH "--------------------------------------------------------------------------\n";
    print FH (localtime() . "-- $message\n");
    foreach my $item (sort keys %$params)
    {
        print FH ("  $item=" . $params->{$item} . "\n");
    }
    flock(FH, LOCK_UN);
    close(FH);
}


my $r = Apache::Request->new(shift);
my $size = $r->header_in("Content-length");
my $query;
$r->read($query, $size);

$query .= '&cmd=_notify-validate';

my $ua = new LWP::UserAgent;
my $req = new HTTP::Request 'POST','http://www.paypal.com/cgi-bin/webscr';
$req->content_type('application/x-www-form-urlencoded');
$req->content($query);
my $res = $ua->request($req);

# split posted variables into pairs
my %params;
my @pairs = split(/&/, $query);
foreach my $pair (@pairs) 
{
    my ($name, $value) = split(/=/, $pair);
    $value =~ tr/+/ /;
    $value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;
    $params{$name} = $value;
}

if ($res->is_error) 
{
    LogTransaction(\%params, "Verification HTTP error", &MetaBrainz::Server::Defs::PAYPAL_ERROR_LOG_FILE);
}
elsif ($res->content eq 'VERIFIED') 
{
    my $mb = new MetaBrainz::Server::MetaBrainz(1);
    $mb->Login();
    my $don = MetaBrainz::Server::Donation->new($mb->{DBH});

    # check that $txn_id has not been previously processed
    my $trans = $don->newFromPayPalTransId($params{txn_id});
    if ($trans && $trans->GetPayPalTransId())
    {
        LogTransaction(\%params, "transaction id used before", &MetaBrainz::Server::Defs::PAYPAL_INVALID_LOG_FILE);
    }
    # check that $receiver_email is your Primary PayPal email
    elsif ($params{receiver_email} ne &MetaBrainz::Server::Defs::PAYPAL_PRIMARY_EMAIL)
    {
        LogTransaction(\%params, "not primary email", &MetaBrainz::Server::Defs::PAYPAL_ERROR_LOG_FILE);
    }
    elsif ($params{sender_email} eq "yewm2008@gmail.com" || $params{sender_email} eq "yewm2007@gmail.com")
    {
        LogTransaction(\%params, "blocked donor", &MetaBrainz::Server::Defs::PAYPAL_ERROR_LOG_FILE);
    }
    elsif ($params{'payment_status'} eq 'Completed' &&
           lc($params{business}) ne 'payment@metabrainz.org')
    {
        $params{email} = $params{payer_email}; 
        $params{address_postcode} = $params{address_zip}; 
        $params{paypal_trans_id} = $params{txn_id}; 
        $params{moderator} = $params{custom};
        $params{contact} = (lc($params{option_name1}) eq 'yes') ? 'y' : 'n';
        $params{anon} = (lc($params{option_name2}) eq 'yes') ? 'y' : 'n';
        $params{amount} = $params{mc_gross} - $params{mc_fee};
        $params{fee} = $params{mc_fee};

        $don->Insert(%params);

        my $rec = MetaBrainz::Server::Receipt->new($mb->{DBH});
        $rec->MailReceipt($don->GetId());

        LogTransaction(\%params, "payment received", &MetaBrainz::Server::Defs::PAYPAL_COMPLETE_LOG_FILE);
    }
    elsif ($params{'payment_status'} eq 'Pending')
    {
        LogTransaction(\%params, "payment pending", &MetaBrainz::Server::Defs::PAYPAL_PENDING_LOG_FILE);
    }
    elsif (lc($params{'business'}) eq 'payment@metabrainz.org')
    {
        LogTransaction(\%params, "non donation received", &MetaBrainz::Server::Defs::PAYPAL_NONDONATION_LOG_FILE);
    }
    else
    {
        LogTransaction(\%params, "Other status (no error)", &MetaBrainz::Server::Defs::PAYPAL_ERROR_LOG_FILE);
    }
}
elsif ($res->content eq 'INVALID') 
{
    # log for manual investigation
    LogTransaction(\%params, "Invalid transaction", &MetaBrainz::Server::Defs::PAYPAL_INVALID_LOG_FILE);
}
else 
{
    LogTransaction(\%params, "Other error (" . $res->content . ")", 
                   &MetaBrainz::Server::Defs::PAYPAL_ERROR_LOG_FILE);
}

$r->status(200);
$r->content_type("text/plain");
$r->header_out('Content-Length', 0);
$r->send_http_header();
